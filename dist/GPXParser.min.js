var gpxParser=function(){this.xmlSource="",this.metadata={},this.waypoints=[],this.tracks=[],this.routes=[]};gpxParser.prototype.parse=function(e){var t=new window.DOMParser;if(this.xmlSource=t.parseFromString(e,"text/xml"),metadata=this.xmlSource.querySelector("metadata"),null!=metadata){this.metadata.name=this.getElementValue(metadata,"name"),this.metadata.desc=this.getElementValue(metadata,"desc"),this.metadata.time=this.getElementValue(metadata,"time");let e={},t=metadata.querySelector("author");if(null!=t){e.name=this.getElementValue(t,"name"),e.email={};let l=t.querySelector("email");null!=l&&(e.email.id=l.getAttribute("id"),e.email.domain=l.getAttribute("domain"));let a={},r=t.querySelector("link");null!=r&&(a.href=r.getAttribute("href"),a.text=this.getElementValue(r,"text"),a.type=this.getElementValue(r,"type")),e.link=a}this.metadata.author=e;let l={},a=this.queryDirectSelector(metadata,"link");null!=a&&(l.href=a.getAttribute("href"),l.text=this.getElementValue(a,"text"),l.type=this.getElementValue(a,"type"),this.metadata.link=l)}var l=[].slice.call(this.xmlSource.querySelectorAll("wpt"));for(let e in l){var a=l[e];let t={};t.name=this.getElementValue(a,"name"),t.lat=parseFloat(a.getAttribute("lat")),t.lon=parseFloat(a.getAttribute("lon")),t.ele=parseFloat(this.getElementValue(a,"ele"))||null,t.cmt=this.getElementValue(a,"cmt"),t.desc=this.getElementValue(a,"desc");let r=this.getElementValue(a,"time");t.time=null==r?null:new Date(r),this.waypoints.push(t)}var r=[].slice.call(this.xmlSource.querySelectorAll("rte"));for(let e in r){let t=r[e],l={};l.name=this.getElementValue(t,"name"),l.cmt=this.getElementValue(t,"cmt"),l.desc=this.getElementValue(t,"desc"),l.src=this.getElementValue(t,"src"),l.number=this.getElementValue(t,"number");let a=this.queryDirectSelector(t,"type");l.type=null!=a?a.innerHTML:null;let n={},s=t.querySelector("link");null!=s&&(n.href=s.getAttribute("href"),n.text=this.getElementValue(s,"text"),n.type=this.getElementValue(s,"type")),l.link=n;let o=[];var i=[].slice.call(t.querySelectorAll("rtept"));for(let e in i){let t=i[e],l={};l.lat=parseFloat(t.getAttribute("lat")),l.lon=parseFloat(t.getAttribute("lon")),l.ele=parseFloat(this.getElementValue(t,"ele"))||null;let a=this.getElementValue(t,"time");l.time=null==a?null:new Date(a),o.push(l)}l.distance=this.calculDistance(o),l.elevation=this.calcElevation(o),l.points=o,this.routes.push(l)}var n=[].slice.call(this.xmlSource.querySelectorAll("trk"));for(let e in n){let t=n[e],l={};l.name=this.getElementValue(t,"name"),l.cmt=this.getElementValue(t,"cmt"),l.desc=this.getElementValue(t,"desc"),l.src=this.getElementValue(t,"src"),l.number=this.getElementValue(t,"number");let a=this.queryDirectSelector(t,"type");l.type=null!=a?a.innerHTML:null;let r={},i=t.querySelector("link");null!=i&&(r.href=i.getAttribute("href"),r.text=this.getElementValue(i,"text"),r.type=this.getElementValue(i,"type")),l.link=r;let o=[],u=[].slice.call(t.querySelectorAll("trkpt"));for(let e in u){var s=u[e];let t={};t.lat=parseFloat(s.getAttribute("lat")),t.lon=parseFloat(s.getAttribute("lon")),t.ele=parseFloat(this.getElementValue(s,"ele"))||null;let l=this.getElementValue(s,"time");t.time=null==l?null:new Date(l),o.push(t)}l.distance=this.calculDistance(o),l.elevation=this.calcElevation(o),l.points=o,this.tracks.push(l)}},gpxParser.prototype.getElementValue=function(e,t){let l=e.querySelector(t);return null!=l?null!=l.innerHTML?l.innerHTML:l.childNodes[0].data:l},gpxParser.prototype.queryDirectSelector=function(e,t){let l=e.querySelectorAll(t),a=l[0];if(l.length>1){let l=e.childNodes;for(idx in l)elem=l[idx],elem.tagName===t&&(a=elem)}return a},gpxParser.prototype.calculDistance=function(e){let t={},l=0,a=[];for(var r=0;r<e.length-1;r++)l+=this.calcDistanceBetween(e[r],e[r+1]),a[r]=l;return a[e.length-1]=l,t.total=l,t.cumul=a,t},gpxParser.prototype.calcDistanceBetween=function(e,t){let l={};l.lat=e.lat,l.lon=e.lon;let a={};a.lat=t.lat,a.lon=t.lon;var r=Math.PI/180,i=l.lat*r,n=a.lat*r,s=Math.sin((a.lat-l.lat)*r/2),o=Math.sin((a.lon-l.lon)*r/2),u=s*s+Math.cos(i)*Math.cos(n)*o*o;return 6371e3*(2*Math.atan2(Math.sqrt(u),Math.sqrt(1-u)))},gpxParser.prototype.calcElevation=function(e){for(var t=0,l=0,a={},r=0;r<e.length-1;r++){var i=parseFloat(e[r+1].ele)-parseFloat(e[r].ele);i<0?l+=i:i>0&&(t+=i)}for(var n=[],s=0,o=(r=0,e.length);r<o;r++){var u=parseFloat(e[r].ele);n.push(u),s+=u}return a.max=Math.max.apply(null,n)||null,a.min=Math.min.apply(null,n)||null,a.pos=Math.abs(t)||null,a.neg=Math.abs(l)||null,a.avg=s/n.length||null,a},gpxParser.prototype.toGeoJSON=function(){var e={type:"FeatureCollection",features:[],properties:{name:this.metadata.name,desc:this.metadata.desc,time:this.metadata.time,author:this.metadata.author,link:this.metadata.link}};for(idx in this.tracks){let a=this.tracks[idx];var t={type:"Feature",geometry:{type:"LineString",coordinates:[]},properties:{}};for(idx in t.properties.name=a.name,t.properties.cmt=a.cmt,t.properties.desc=a.desc,t.properties.src=a.src,t.properties.number=a.number,t.properties.link=a.link,t.properties.type=a.type,a.points){let e=a.points[idx];(l=[]).push(e.lon),l.push(e.lat),l.push(e.ele),t.geometry.coordinates.push(l)}e.features.push(t)}for(idx in this.routes){let a=this.routes[idx];t={type:"Feature",geometry:{type:"LineString",coordinates:[]},properties:{}};for(idx in t.properties.name=a.name,t.properties.cmt=a.cmt,t.properties.desc=a.desc,t.properties.src=a.src,t.properties.number=a.number,t.properties.link=a.link,t.properties.type=a.type,a.points){let e=a.points[idx];var l;(l=[]).push(e.lon),l.push(e.lat),l.push(e.ele),t.geometry.coordinates.push(l)}e.features.push(t)}for(idx in this.waypoints){let l=this.waypoints[idx];(t={type:"Feature",geometry:{type:"Point",coordinates:[]},properties:{}}).properties.name=l.name,t.properties.cmt=l.cmt,t.properties.desc=l.desc,t.geometry.coordinates=[l.lon,l.lat,l.ele],e.features.push(t)}return e},"undefined"!=typeof module&&(module.exports=gpxParser);