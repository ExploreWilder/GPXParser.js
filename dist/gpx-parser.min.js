var gpxParser=function(){this.xmlSource="",this.metadata={},this.waypoints=[],this.tracks=[],this.routes=[]};gpxParser.prototype.parse=function(e){var t=new window.DOMParser;if(this.xmlSource=t.parseFromString(e,"text/xml"),metadata=this.xmlSource.querySelector("metadata"),null!=metadata){this.metadata.name=this.getElementValue(metadata,"name"),this.metadata.desc=this.getElementValue(metadata,"desc"),this.metadata.time=this.getElementValue(metadata,"time");let e={},t=metadata.querySelector("author");if(null!=t){e.name=this.getElementValue(t,"name"),e.email={};let l=t.querySelector("email");null!=l&&(e.email.id=l.getAttribute("id"),e.email.domain=l.getAttribute("domain"));let r={},a=t.querySelector("link");null!=a&&(r.href=a.getAttribute("href"),r.text=this.getElementValue(a,"text"),r.type=this.getElementValue(a,"type")),e.link=r}this.metadata.author=e;let l={},r=this.queryDirectSelector(metadata,"link");null!=r&&(l.href=r.getAttribute("href"),l.text=this.getElementValue(r,"text"),l.type=this.getElementValue(r,"type"),this.metadata.link=l)}var l=[].slice.call(this.xmlSource.querySelectorAll("wpt"));for(let e in l){var r=l[e];let t={};t.name=this.getElementValue(r,"name"),t.lat=parseFloat(r.getAttribute("lat")),t.lon=parseFloat(r.getAttribute("lon")),t.ele=parseFloat(this.getElementValue(r,"ele"))||null,t.cmt=this.getElementValue(r,"cmt"),t.desc=this.getElementValue(r,"desc"),this.waypoints.push(t)}var a=[].slice.call(this.xmlSource.querySelectorAll("rte"));for(let e in a){var i=a[e];let t={};t.name=this.getElementValue(i,"name"),t.cmt=this.getElementValue(i,"cmt"),t.desc=this.getElementValue(i,"desc"),t.src=this.getElementValue(i,"src"),t.number=this.getElementValue(i,"number");let l=this.queryDirectSelector(i,"type");t.type=null!=l?l.innerHTML:null;let r={},o=i.querySelector("link");null!=o&&(r.href=o.getAttribute("href"),r.text=this.getElementValue(o,"text"),r.type=this.getElementValue(o,"type")),t.link=r;let u=[];var n=[].slice.call(i.querySelectorAll("rtept"));for(let e in n){var s=n[e];let t={};t.lat=parseFloat(s.getAttribute("lat")),t.lon=parseFloat(s.getAttribute("lon")),t.ele=parseFloat(this.getElementValue(s,"ele")),u.push(t)}t.distance=this.calculDistance(u),t.elevation=this.calcElevation(u),t.points=u,this.routes.push(t)}var o=[].slice.call(this.xmlSource.querySelectorAll("trk"));for(let e in o){var u=o[e];let t={};t.name=this.getElementValue(u,"name"),t.cmt=this.getElementValue(u,"cmt"),t.desc=this.getElementValue(u,"desc"),t.src=this.getElementValue(u,"src"),t.number=this.getElementValue(u,"number");let l=this.queryDirectSelector(u,"type");t.type=null!=l?l.innerHTML:null;let r={},a=u.querySelector("link");null!=a&&(r.href=a.getAttribute("href"),r.text=this.getElementValue(a,"text"),r.type=this.getElementValue(a,"type")),t.link=r;let i=[];var p=[].slice.call(u.querySelectorAll("trkpt"));for(let e in p){var c=p[e];let t={};t.lat=parseFloat(c.getAttribute("lat")),t.lon=parseFloat(c.getAttribute("lon")),t.ele=parseFloat(this.getElementValue(c,"ele"))||null,i.push(t)}t.distance=this.calculDistance(i),t.elevation=this.calcElevation(i),t.points=i,this.tracks.push(t)}},gpxParser.prototype.getElementValue=function(e,t){let l=e.querySelector(t);return null!=l?null!=l.innerHTML?l.innerHTML:(new XMLSerializer).serializeToString(l).replace(" ","").replace("<"+t+">","").replace("</"+t+">",""):l},gpxParser.prototype.queryDirectSelector=function(e,t){let l=e.querySelectorAll(t),r=l[0];if(l.length>1){let l=e.childNodes;for(idx in l)elem=l[idx],elem.tagName===t&&(r=elem)}return r},gpxParser.prototype.calculDistance=function(e){let t={},l=0,r=[];for(var a=0;a<e.length-1;a++)l+=this.calcDistanceBetween(e[a],e[a+1]),r[a]=l;return r[e.length-1]=l,t.total=l,t.cumul=r,t},gpxParser.prototype.calcDistanceBetween=function(e,t){let l={};l.lat=e.lat,l.lon=e.lon;let r={};r.lat=t.lat,r.lon=t.lon;var a=Math.PI/180,i=l.lat*a,n=r.lat*a,s=Math.sin((r.lat-l.lat)*a/2),o=Math.sin((r.lon-l.lon)*a/2),u=s*s+Math.cos(i)*Math.cos(n)*o*o;return 6371e3*(2*Math.atan2(Math.sqrt(u),Math.sqrt(1-u)))},gpxParser.prototype.calcElevation=function(e){for(var t=0,l=0,r={},a=0;a<e.length-1;a++){var i=parseFloat(e[a+1].ele)-parseFloat(e[a].ele);i<0?l+=i:i>0&&(t+=i)}for(var n=[],s=0,o=(a=0,e.length);a<o;a++){var u=parseFloat(e[a].ele);n.push(u),s+=u}return r.max=Math.max.apply(null,n)||null,r.min=Math.min.apply(null,n)||null,r.pos=Math.abs(t)||null,r.neg=Math.abs(l)||null,r.avg=s/n.length||null,r},gpxParser.prototype.isEmpty=function(e){for(var t in e)if(e.hasOwnProperty(t))return!1;return!0},gpxParser.prototype.toGeoJSON=function(){var e={type:"FeatureCollection",features:[],properties:{name:this.metadata.name,desc:this.metadata.desc,time:this.metadata.time,author:this.metadata.author,link:this.metadata.link}};for(idx in this.tracks){let r=this.tracks[idx];var t={type:"Feature",geometry:{type:"LineString",coordinates:[]},properties:{}};for(idx in t.properties.name=r.name,t.properties.cmt=r.cmt,t.properties.desc=r.desc,t.properties.src=r.src,t.properties.number=r.number,t.properties.link=r.link,t.properties.type=r.type,r.points){let e=r.points[idx];(l=[]).push(e.lon),l.push(e.lat),l.push(e.ele),t.geometry.coordinates.push(l)}e.features.push(t)}for(idx in this.routes){let r=this.routes[idx];t={type:"Feature",geometry:{type:"LineString",coordinates:[]},properties:{}};for(idx in t.properties.name=r.name,t.properties.cmt=r.cmt,t.properties.desc=r.desc,t.properties.src=r.src,t.properties.number=r.number,t.properties.link=r.link,t.properties.type=r.type,r.points){let e=r.points[idx];var l;(l=[]).push(e.lon),l.push(e.lat),l.push(e.ele),t.geometry.coordinates.push(l)}e.features.push(t)}for(idx in this.waypoints){let l=this.waypoints[idx];(t={type:"Feature",geometry:{type:"Point",coordinates:[]},properties:{}}).properties.name=l.name,t.properties.cmt=l.cmt,t.properties.desc=l.desc,t.geometry.coordinates=[l.lon,l.lat,l.ele],e.features.push(t)}return e},module.exports=gpxParser;