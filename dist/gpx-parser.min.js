var gpxParser=function(){this.xmlSource="",this.metadata={},this.waypoints=[],this.tracks=[],this.routes=[]};gpxParser.prototype.parse=function(e){var t=new window.DOMParser;if(this.xmlSource=t.parseFromString(e,"text/xml"),metadata=this.xmlSource.querySelector("metadata"),null!=metadata){this.metadata.name=this.getElementValue(metadata,"name"),this.metadata.desc=this.getElementValue(metadata,"desc"),this.metadata.time=this.getElementValue(metadata,"time");let e={},t=metadata.querySelector("author");if(null!=t){e.name=this.getElementValue(t,"name"),e.email={};let a=t.querySelector("email");null!=a&&(e.email.id=a.getAttribute("id"),e.email.domain=a.getAttribute("domain"));let l={},r=t.querySelector("link");null!=r&&(l.href=r.getAttribute("href"),l.text=this.getElementValue(r,"text"),l.type=this.getElementValue(r,"type")),e.link=l}this.metadata.author=e;let a={},l=metadata.querySelector("link");null!=l&&(a.href=l.getAttribute("href"),a.text=this.getElementValue(l,"text"),a.type=this.getElementValue(l,"type"),this.metadata.link=a)}var a=[].slice.call(this.xmlSource.querySelectorAll("wpt"));for(let e in a){var l=a[e];let t={};t.name=this.getElementValue(l,"name"),t.lat=parseFloat(l.getAttribute("lat")),t.lon=parseFloat(l.getAttribute("lon")),t.ele=parseFloat(this.getElementValue(l,"ele"))||null,t.cmt=this.getElementValue(l,"cmt"),t.desc=this.getElementValue(l,"desc"),this.waypoints.push(t)}var r=[].slice.call(this.xmlSource.querySelectorAll("rte"));for(let e in r){var s=r[e];let t={};t.name=this.getElementValue(s,"name"),t.cmt=this.getElementValue(s,"cmt"),t.desc=this.getElementValue(s,"desc"),t.src=this.getElementValue(s,"src"),t.number=this.getElementValue(s,"number"),t.type=this.getElementValue(s,"type");let a={},l=s.querySelector("link");null!=l&&(a.href=l.getAttribute("href"),a.text=this.getElementValue(l,"text"),a.type=this.getElementValue(l,"type")),t.link=a;let o=[];var n=[].slice.call(s.querySelectorAll("rtept"));for(let e in n){var i=n[e];let t={};t.lat=parseFloat(i.getAttribute("lat")),t.lon=parseFloat(i.getAttribute("lon")),t.ele=parseFloat(this.getElementValue(i,"ele")),o.push(t)}t.distance=this.calculDistance(o),t.elevation=this.calcElevation(o),t.points=o,this.routes.push(t)}var o=[].slice.call(this.xmlSource.querySelectorAll("trk"));for(let e in o){var u=o[e];let t={};t.name=this.getElementValue(u,"name"),t.cmt=this.getElementValue(u,"cmt"),t.desc=this.getElementValue(u,"desc"),t.src=this.getElementValue(u,"src"),t.number=this.getElementValue(u,"number"),t.type=this.getElementValue(u,"type");let a={},l=u.querySelector("link");null!=l&&(a.href=l.getAttribute("href"),a.text=this.getElementValue(l,"text"),a.type=this.getElementValue(l,"type")),t.link=a;let r=[];var p=[].slice.call(u.querySelectorAll("trkpt"));for(let e in p){var c=p[e];let t={};t.lat=parseFloat(c.getAttribute("lat")),t.lon=parseFloat(c.getAttribute("lon")),t.ele=parseFloat(this.getElementValue(c,"ele"))||null,r.push(t)}t.distance=this.calculDistance(r),t.elevation=this.calcElevation(r),t.points=r,this.tracks.push(t)}},gpxParser.prototype.getElementValue=function(e,t){let a=e.querySelector(" :scope > "+t);return null!=a?a.innerHTML:a},gpxParser.prototype.calculDistance=function(e){let t={},a=0,l=[];for(var r=0;r<e.length-1;r++)a+=this.calcDistanceBetween(e[r],e[r+1]),l[r]=a;return l[e.length-1]=a,t.total=a,t.cumul=l,t},gpxParser.prototype.calcDistanceBetween=function(e,t){let a={};a.lat=e.lat,a.lon=e.lon;let l={};l.lat=t.lat,l.lon=t.lon;var r=Math.PI/180,s=a.lat*r,n=l.lat*r,i=Math.sin((l.lat-a.lat)*r/2),o=Math.sin((l.lon-a.lon)*r/2),u=i*i+Math.cos(s)*Math.cos(n)*o*o;return 6371e3*(2*Math.atan2(Math.sqrt(u),Math.sqrt(1-u)))},gpxParser.prototype.calcElevation=function(e){for(var t=0,a=0,l={},r=0;r<e.length-1;r++){var s=parseFloat(e[r+1].ele)-parseFloat(e[r].ele);s<0?a+=s:s>0&&(t+=s)}for(var n=[],i=0,o=(r=0,e.length);r<o;r++){var u=parseFloat(e[r].ele);n.push(u),i+=u}return l.max=Math.max.apply(null,n)||null,l.min=Math.min.apply(null,n)||null,l.pos=Math.abs(t)||null,l.neg=Math.abs(a)||null,l.avg=i/n.length||null,l},gpxParser.prototype.isEmpty=function(e){for(var t in e)if(e.hasOwnProperty(t))return!1;return!0},gpxParser.prototype.toGeoJSON=function(){var e={type:"FeatureCollection",features:[],properties:{name:this.metadata.name,desc:this.metadata.desc,time:this.metadata.time,author:this.metadata.author,link:this.metadata.link}};return this.tracks.forEach(function(t){var a={type:"Feature",geometry:{type:"LineString",coordinates:[]},properties:{}};a.properties.name=t.name,a.properties.cmt=t.cmt,a.properties.desc=t.desc,a.properties.src=t.src,a.properties.number=t.number,a.properties.link=t.link,a.properties.type=t.type,t.points.forEach(function(e){var t=[];t.push(e.lon),t.push(e.lat),t.push(e.ele),a.geometry.coordinates.push(t)}),e.features.push(a)}),this.routes.forEach(function(t){var a={type:"Feature",geometry:{type:"LineString",coordinates:[]},properties:{}};a.properties.name=t.name,a.properties.cmt=t.cmt,a.properties.desc=t.desc,a.properties.src=t.src,a.properties.number=t.number,a.properties.link=t.link,a.properties.type=t.type,t.points.forEach(function(e){var t=[];t.push(e.lon),t.push(e.lat),t.push(e.ele),a.geometry.coordinates.push(t)}),e.features.push(a)}),this.waypoints.forEach(function(t){var a={type:"Feature",geometry:{type:"Point",coordinates:[]},properties:{}};a.properties.name=t.name,a.properties.cmt=t.cmt,a.properties.desc=t.desc,a.geometry.coordinates=[t.lon,t.lat,t.ele],e.features.push(a)}),e},module.exports=gpxParser;